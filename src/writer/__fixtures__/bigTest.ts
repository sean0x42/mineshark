import { NbtTag } from "../../nbt";

const tag: NbtTag = {
  kind: 10,
  name: "Level",
  payload: {
    "nested compound test": {
      kind: 10,
      name: "nested compound test",
      payload: {
        egg: {
          kind: 10,
          name: "egg",
          payload: {
            name: {
              kind: 8,
              name: "name",
              payload: "Eggbert",
            },
            value: {
              kind: 5,
              name: "value",
              payload: 0.5,
            },
          },
        },
        ham: {
          kind: 10,
          name: "ham",
          payload: {
            name: {
              kind: 8,
              name: "name",
              payload: "Hampus",
            },
            value: {
              kind: 5,
              name: "value",
              payload: 0.75,
            },
          },
        },
      },
    },
    intTest: {
      kind: 3,
      name: "intTest",
      payload: 2147483647,
    },
    byteTest: {
      kind: 1,
      name: "byteTest",
      payload: 127,
    },
    stringTest: {
      kind: 8,
      name: "stringTest",
      payload: "HELLO WORLD THIS IS A TEST STRING ÅÄÖ!",
    },
    "listTest (long)": {
      kind: 9,
      name: "listTest (long)",
      payload: [
        {
          kind: 4,
          name: undefined,
          payload: BigInt("11"),
        },
        {
          kind: 4,
          name: undefined,
          payload: BigInt("12"),
        },
        {
          kind: 4,
          name: undefined,
          payload: BigInt("13"),
        },
        {
          kind: 4,
          name: undefined,
          payload: BigInt("14"),
        },
        {
          kind: 4,
          name: undefined,
          payload: BigInt("15"),
        },
      ],
    },
    doubleTest: {
      kind: 6,
      name: "doubleTest",
      payload: 0.4931287132182315,
    },
    floatTest: {
      kind: 5,
      name: "floatTest",
      payload: 0.4982314705848694,
    },
    longTest: {
      kind: 4,
      name: "longTest",
      payload: BigInt("9223372036854775807"),
    },
    "listTest (compound)": {
      kind: 9,
      name: "listTest (compound)",
      payload: [
        {
          kind: 10,
          name: undefined,
          payload: {
            "created-on": {
              kind: 4,
              name: "created-on",
              payload: BigInt("1264099775885"),
            },
            name: {
              kind: 8,
              name: "name",
              payload: "Compound tag #0",
            },
          },
        },
        {
          kind: 10,
          name: undefined,
          payload: {
            "created-on": {
              kind: 4,
              name: "created-on",
              payload: BigInt("1264099775885"),
            },
            name: {
              kind: 8,
              name: "name",
              payload: "Compound tag #1",
            },
          },
        },
      ],
    },
    "byteArrayTest (the first 1000 values of (n*n*255+n*7)%100, starting with n=0 (0, 62, 34, 16, 8, ...))":
      {
        kind: 7,
        name: "byteArrayTest (the first 1000 values of (n*n*255+n*7)%100, starting with n=0 (0, 62, 34, 16, 8, ...))",
        payload: Buffer.from([
          0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14,
          46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20,
          32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66,
          58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90,
          52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36,
          78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22,
          44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48,
          50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42,
          14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68,
          20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34,
          66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40,
          52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86,
          78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72,
          44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98,
          50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42,
          64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68,
          70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34,
          16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40,
          2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86,
          28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72,
          94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98,
          0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64,
          46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70,
          32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16,
          58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2,
          24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36,
          28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22,
          94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48,
          0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14,
          46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20,
          32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66,
          58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90,
          52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36,
          78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22,
          44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48,
          50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42,
          14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68,
          20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34,
          66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40,
          52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86,
          78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72,
          44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98,
          50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36, 28, 30, 42,
          64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22, 94, 76, 68,
          70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48, 0, 62, 34,
          16, 8, 10, 22, 44, 76, 18, 70, 32, 4, 86, 78, 80, 92, 14, 46, 88, 40,
          2, 74, 56, 48, 50, 62, 84, 16, 58, 10, 72, 44, 26, 18, 20, 32, 54, 86,
          28, 80, 42, 14, 96, 88, 90, 2, 24, 56, 98, 50, 12, 84, 66, 58, 60, 72,
          94, 26, 68, 20, 82, 54, 36, 28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98,
          0, 12, 34, 66, 8, 60, 22, 94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64,
          46, 38, 40, 52, 74, 6, 48, 0, 62, 34, 16, 8, 10, 22, 44, 76, 18, 70,
          32, 4, 86, 78, 80, 92, 14, 46, 88, 40, 2, 74, 56, 48, 50, 62, 84, 16,
          58, 10, 72, 44, 26, 18, 20, 32, 54, 86, 28, 80, 42, 14, 96, 88, 90, 2,
          24, 56, 98, 50, 12, 84, 66, 58, 60, 72, 94, 26, 68, 20, 82, 54, 36,
          28, 30, 42, 64, 96, 38, 90, 52, 24, 6, 98, 0, 12, 34, 66, 8, 60, 22,
          94, 76, 68, 70, 82, 4, 36, 78, 30, 92, 64, 46, 38, 40, 52, 74, 6, 48,
        ]),
      },
    shortTest: {
      kind: 2,
      name: "shortTest",
      payload: 32767,
    },
  },
};

export default tag;
